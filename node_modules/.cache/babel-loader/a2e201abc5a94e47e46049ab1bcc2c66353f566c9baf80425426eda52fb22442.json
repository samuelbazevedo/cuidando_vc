{"ast":null,"code":"import _regeneratorRuntime from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapState, mapActions } from 'vuex';\nimport CommentItem from '@/components/comments/CommentItem.vue';\nexport default {\n  name: 'comments-tab',\n  components: {\n    CommentItem: CommentItem\n  },\n  data: function data() {\n    return {\n      text: ''\n    };\n  },\n  computed: mapState({\n    page: function page(state) {\n      return state.comments.commentsPage;\n    },\n    pending: function pending(state) {\n      return state.comments.pending;\n    },\n    username: function username(state) {\n      return state.auth.username;\n    }\n  }),\n  methods: _objectSpread({\n    _sendComment: function _sendComment(data) {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.sendComment(data);\n            case 2:\n              // TODO: só remover o texto se não der erro\n              _this.text = '';\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }, mapActions(['sendComment', 'requireLogin']))\n};","map":{"version":3,"names":["mapState","mapActions","CommentItem","name","components","data","text","computed","page","state","comments","commentsPage","pending","username","auth","methods","_objectSpread","_sendComment","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","sendComment","stop"],"sources":["src/components/comments/CommentsTab.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 class=\"text-neutral-base font-semibold text-xl\">{{ $t('See the comments about this expense') }}</h3>\n\n    <form class=\"form mt-3\">\n      <div v-if=\"!username\">\n        <button class=\"btn btn-color-sec relative text-right text-white px-3 py-2 cursor-pointer bg-secondary-light font-light hover:bg-secondary-base rounded\" @click=\"requireLogin\">Faça login</button>\n      </div>\n      <div v-else>\n        <div class=\"form-group\">\n          <label class=\"sr-only\" for=\"comment-textarea\">\n              {{ $t('Comment') }}\n          </label>\n          <textarea\n              id=\"comment-textarea\"\n              rows=\"3\"\n              maxlength=\"500\"\n              class=\"form-control bg-gray-50 border border-gray-300 text-neutral-base text-sm rounded-lg focus:ring-primary-dark focus:border-primary-dark block w-full p-2.5\" \n              v-model=\"text\"\n              :placeholder=\"$t('Your comment')\"/>\n        </div>\n        <button-spinner type=\"submit\"\n          @click.prevent.native=\"_sendComment({ key: page.name, text })\"\n          :disabled=\"!text.length\"\n          :condition=\"pending.reply[page.name]\"\n          class=\"mt-5 text-white cursor-pointer bg-secondary-light hover:bg-secondary-base focus:ring-4 focus:outline-none font-medium rounded-lg text-sm px-5 py-2.5 text-center\"\n        >\n          {{ $t(\"Send comment\") }}\n        </button-spinner>\n      </div>\n    </form>\n\n    <div class=\"comments-block my-10 w-full\">\n      <comment-item v-for=\"(comment, i) in page.comments\"\n                    :key=\"i\" :top=\"true\" :comment=\"comment\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport CommentItem from '@/components/comments/CommentItem.vue'\n\nexport default {\n  name: 'comments-tab',\n  components: {\n    CommentItem\n  },\n  data () {\n    return {\n      text: ''\n    }\n  },\n  computed: mapState({\n    page: state => state.comments.commentsPage,\n    pending: state => state.comments.pending,\n    username: state => state.auth.username,\n  }),\n  methods: {\n    async _sendComment (data) {\n      await this.sendComment(data)\n      // TODO: só remover o texto se não der erro\n      this.text = ''\n    },\n    ...mapActions(['sendComment', 'requireLogin'])\n  }\n}\n</script>\n"],"mappings":";;;AAwCA,SAAAA,QAAA,EAAAC,UAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF,WAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA;IACA;EACA;EACAC,QAAA,EAAAP,QAAA;IACAQ,IAAA,WAAAA,KAAAC,KAAA;MAAA,OAAAA,KAAA,CAAAC,QAAA,CAAAC,YAAA;IAAA;IACAC,OAAA,WAAAA,QAAAH,KAAA;MAAA,OAAAA,KAAA,CAAAC,QAAA,CAAAE,OAAA;IAAA;IACAC,QAAA,WAAAA,SAAAJ,KAAA;MAAA,OAAAA,KAAA,CAAAK,IAAA,CAAAD,QAAA;IAAA;EACA;EACAE,OAAA,EAAAC,aAAA;IACAC,YAAA,WAAAA,aAAAZ,IAAA;MAAA,IAAAa,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAT,KAAA,CAAAU,WAAA,CAAAvB,IAAA;YAAA;cACA;cACAa,KAAA,CAAAZ,IAAA;YAAA;YAAA;cAAA,OAAAmB,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAP,OAAA;MAAA;IACA;EAAA,GACArB,UAAA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}