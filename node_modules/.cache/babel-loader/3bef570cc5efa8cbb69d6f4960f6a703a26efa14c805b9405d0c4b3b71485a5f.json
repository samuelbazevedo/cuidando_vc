{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { drawDonut } from './chart-utils';\nexport default {\n  name: 'labeled-doughnut',\n  props: {\n    percentage: Number,\n    color: String\n  },\n  mounted: function mounted() {\n    drawDonut(this.$refs.canvas, this.color, this.percentage);\n  },\n  watch: {\n    percentage: function percentage(newValue, oldValue) {\n      drawDonut(this.$refs.canvas, this.color, newValue);\n    }\n  },\n  data: function data() {\n    return {\n      width: 200,\n      height: 200\n    };\n  }\n};","map":{"version":3,"names":["drawDonut","name","props","percentage","Number","color","String","mounted","$refs","canvas","watch","newValue","oldValue","data","width","height"],"sources":["src/components/chart/LabeledDoughnut.vue"],"sourcesContent":["<template>\n  <div class=\"canvas-wrapper\">\n    <canvas ref=\"canvas\" class=\"donut\" :width=\"width\" :height=\"height\"/>\n    <span class=\"darker-text canvas-text\">{{ percentage }}%</span>\n  </div>\n</template>\n\n<script>\nimport { drawDonut } from './chart-utils'\nexport default {\n  name: 'labeled-doughnut',\n  props: {\n    percentage: Number,\n    color: String\n  },\n  mounted () {\n    drawDonut(this.$refs.canvas, this.color, this.percentage)\n  },\n  watch: {\n    percentage (newValue, oldValue) {\n      drawDonut(this.$refs.canvas, this.color, newValue)\n    }\n  },\n  data () {\n    return {\n      width: 200,\n      height: 200\n    }\n  }\n}\n</script>\n"],"mappings":";AAQA,SAAAA,SAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,UAAA,EAAAC,MAAA;IACAC,KAAA,EAAAC;EACA;EACAC,OAAA,WAAAA,QAAA;IACAP,SAAA,MAAAQ,KAAA,CAAAC,MAAA,OAAAJ,KAAA,OAAAF,UAAA;EACA;EACAO,KAAA;IACAP,UAAA,WAAAA,WAAAQ,QAAA,EAAAC,QAAA;MACAZ,SAAA,MAAAQ,KAAA,CAAAC,MAAA,OAAAJ,KAAA,EAAAM,QAAA;IACA;EACA;EACAE,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}