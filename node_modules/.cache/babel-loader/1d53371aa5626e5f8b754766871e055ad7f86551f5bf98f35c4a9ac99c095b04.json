{"ast":null,"code":"import _regeneratorRuntime from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapState, mapActions } from 'vuex';\nimport { formatDate } from '@/utils';\nexport default {\n  name: 'comment-item',\n  props: {\n    comment: Object,\n    top: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      isEditting: false,\n      isReplying: false,\n      edit: this.comment.text,\n      reply: '',\n      openCommentList: false\n    };\n  },\n  computed: _objectSpread({\n    isAuthor: function isAuthor() {\n      return this.comment.author === this.username;\n    }\n  }, mapState({\n    username: function username(state) {\n      return state.auth.username;\n    },\n    pending: function pending(state) {\n      return state.comments.pending;\n    }\n  })),\n  methods: _objectSpread({\n    formatDate: formatDate,\n    sendEditAndClose: function sendEditAndClose() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.sendEdit({\n                url: _this.comment.url,\n                text: _this.edit,\n                id: _this.comment.id\n              });\n            case 2:\n              _this.isEditting = false;\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    _sendReply: function _sendReply(data) {\n      this.sendReply(data);\n      // TODO: só remover o texto e fechar caixa se não der erro\n      this.isReplying = false;\n      this.reply = '';\n    },\n    toggleListComment: function toggleListComment() {\n      this.openCommentList = !this.openCommentList;\n    },\n    closeListComment: function closeListComment() {\n      this.openCommentList = false;\n    }\n  }, mapActions(['requireLogin', 'sendDelete', 'sendVote', 'sendEdit', 'sendReport', 'sendReply']))\n};","map":{"version":3,"names":["mapState","mapActions","formatDate","name","props","comment","Object","top","type","Boolean","default","data","isEditting","isReplying","edit","text","reply","openCommentList","computed","_objectSpread","isAuthor","author","username","state","auth","pending","comments","methods","sendEditAndClose","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","sendEdit","url","id","stop","_sendReply","sendReply","toggleListComment","closeListComment"],"sources":["src/components/comments/CommentItem.vue"],"sourcesContent":["<template>\n  <div class=\"comment-item border-b border-gray-200\">\n      <div>\n          <div class=\"flex items-center space-x-4\">\n            <div class=\"flex-shrink-0\">\n              <img class=\"icon\" :src=\"$assets.aComTop\">\n            </div>\n            <div class=\"flex-1 min-w-0\">\n                <p class=\"text-base font-medium text-neutral-base truncate\" v-if=\"!comment.hidden && !isEditting\">\n                {{ comment.text }}\n                </p>\n                <p v-if=\"comment.hidden\" class=\"text-sm font-medium text-neutral-base truncate\">\n                  {{ $t('Comment removed.') }}\n                </p>\n                <p class=\"text-sm text-neutral-light truncate\">\n                  <router-link :to=\"{ name: 'pessoa', params: { viewingUser: comment.author} }\">\n                      {{ comment.author }}\n                  </router-link>\n                </p>\n            </div>\n            <div class=\"inline-flex items-baseline text-base font-semibold text-neutral-base\">\n                <span class=\"mr-2\">{{ formatDate(comment.created) }}</span>\n              <br>\n              <span class=\"text-xs text-neutral-light\" v-if=\"comment.created.getTime() !== comment.modified.getTime()\">\n                Modificado ({{ formatDate(comment.modified) }})\n              </span>\n              <!-- <span>+{{comment.upvotes}}/-{{comment.downvotes}}</span> -->\n            </div>\n            <div>\n              <button \n              class=\"hidden sm:inline-block text-gray-500 hover:bg-gray-100 rounded-lg text-sm p-1.5\" type=\"button\"\n              v-click-outside=\"closeListComment\"\n              @click=\"toggleListComment\">\n                <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\"></path></svg>\n              </button>\n              <!-- Dropdown menu -->\n              <div v-if=\"openCommentList\" class=\"absolute z-10 w-20 -ml-10 text-base list-none bg-white rounded divide-y divide-gray-100 shadow\">\n                  <ul class=\"py-1\">\n                    <li>\n                      <a v-if=\"!isEditting\"\n                          class=\"cursor-pointer block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100\"\n                          @click=\"isEditting = true\">\n                        {{ $t(\"edit\") }}\n                      </a>\n                    </li>\n                    <li>\n                      <button-spinner\n                        @click.prevent.native=\"sendDelete({ url: comment.url, id: comment.id })\"\n                        :condition=\"pending.delete[comment.id]\"\n                        class=\"cursor-pointer block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100\">\n                          {{ $t(\"Delete\") }}\n                      </button-spinner>\n                    </li>\n                  </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex items-center space-x-4 py-3\">\n           <div class=\"inline-flex items-center\">\n              <!-- Control buttons -->\n              <button class=\" text-secondary-base ml-10 underline\"\n                v-if=\"!isEditting\"\n                @click=\"isReplying = true\"\n                @focus=\"requireLogin\">\n                {{ $t(\"reply\") }}\n              </button>\n              <!-- Not Author buttons -->\n                <div v-if=\"!isAuthor\" class=\"bullet mx-2 text-secondary-base\">•</div>\n                <button-spinner\n                  v-if=\"!isAuthor\"\n                  class=\"text-secondary-base\"\n                  @focus.native=\"requireLogin\"\n                  :condition=\"pending.voteup[comment.id]\"\n                  @click.prevent.native=\"sendVote({ url: comment.vote_url, id: comment.id, vote: true })\">\n                    Curtir {{ pending.voteup.length }}\n                </button-spinner>\n                <div v-if=\"!isAuthor\" class=\"bullet mx-2 text-secondary-base\">•</div>\n                <button-spinner\n                  v-if=\"!isAuthor\"\n                  class=\" text-secondary-base \"\n                  @focus.native=\"requireLogin\"\n                  :condition=\"pending.votedown[comment.id]\"\n                  @click.prevent.native=\"sendVote({ url: comment.vote_url, id: comment.id, vote: false })\">\n                    Descurtir\n                </button-spinner>\n                <div v-if=\"!isAuthor\" class=\"bullet mx-2 text-secondary-base\">•</div>\n                <button-spinner\n                  class=\" text-secondary-base \"\n                  v-if=\"!comment.hidden && !isAuthor \"\n                  :title=\"$t('Report comment as inappropriate')\"\n                  :condition=\"pending.report[comment.id]\"\n                  @click.prevent.native=\"sendReport({ url: comment.report_url, id: comment.id })\">\n                    {{ $t('Report') }}\n                </button-spinner>\n            </div>\n          </div>\n          <!-- Icon for replies to top most comments -->\n          <div v-if=\"!top\" class=\"comment-icon not-comment-top\">\n            <img class=\"icon w-5\" :src=\"$assets.aCom\">\n          </div>\n\n          <div class=\"comment-flex\">\n              <div class=\"comment-text\">\n\n                  <!-- Edit form -->\n                  <form class=\"form\" v-if=\"isEditting\">\n                      <div class=\"form-group\">\n                          <label class=\"sr-only\"\n                                  :for=\"`comment-edit-textarea-${comment.id}`\">\n                              {{ $t('Edit comment') }}\n                          </label>\n                          <textarea\n                            :id=\"`comment-edit-textarea-${comment.id}`\"\n                            class=\"form-control bg-gray-50 border border-gray-300 text-neutral-base text-sm rounded-lg focus:ring-primary-dark focus:border-primary-dark block w-full p-2.5\" \n                            maxlength=\"500\"\n                            v-model=\"edit\"\n                            rows=\"3\"/>\n                      </div>\n                      <button-spinner\n                        type=\"submit\"\n                        @click.prevent.native=\"sendEditAndClose\"\n                        :condition=\"pending.edit[comment.id]\"\n                        class=\"my-5 text-white cursor-pointer bg-secondary-light hover:bg-secondary-base focus:ring-4 focus:outline-none font-medium rounded-lg text-sm px-4 py-2 text-center\">\n                          {{ $t('Save') }}\n                      </button-spinner>\n                      <a v-if=\"isEditting\"\n                          class=\"my-5 text-secondary-light cursor-pointer border border-secondary-light hover:bg-secondary-light hover:text-white font-medium rounded-lg text-sm px-4 py-2 text-center\"\n                          @click=\"isEditting = false\">\n                        {{ $t(\"Cancel\") }}\n                      </a>\n                  </form>\n\n                  \n              </div>\n          </div>\n\n          \n        <div>\n            <!-- Reply form -->\n            <form class=\"form\" v-if=\"isReplying\">\n                <div class=\"form-group\">\n                    <label class=\"sr-only\"\n                           for=\"comment-reply-textarea-{comment.id}\">\n                        {{ $t('Reply Comment') }}\n                    </label>\n                    <textarea\n                      id=\"comment-reply-textarea-{comment.id}\"\n                      class=\"form-control bg-gray-50 border border-gray-300 text-neutral-base text-sm rounded-lg focus:ring-primary-dark focus:border-primary-dark block w-full p-2.5\" \n                      maxlength=\"500\"\n                      v-model=\"reply\"\n                      rows=\"3\"/>\n                </div>\n                <button-spinner type=\"submit\"\n                        @click.prevent.native=\"_sendReply({ url: comment.url, text: reply, id: comment.id })\"\n                        :condition=\"pending.reply[comment.id]\"\n                        :disabled=\"!reply.length\"\n                        class=\"my-5 text-white cursor-pointer bg-secondary-light hover:bg-secondary-base focus:ring-4 focus:outline-none font-medium rounded-lg text-sm px-4 py-2 text-center\">\n                    {{ $t('Send') }}\n                </button-spinner>\n                <button  class=\"my-5 text-secondary-light cursor-pointer border border-secondary-light hover:bg-secondary-light hover:text-white font-medium rounded-lg text-sm px-4 py-2 text-center\"\n @click.prevent.native=\"isReplying = false\">\n                    {{ $t('Cancel') }}\n                </button>\n            </form>\n        </div>\n      </div>\n      <!-- Replies list -->\n      <comment-item v-for=\"(reply, i) in comment.replies\" :key=\"i\" style=\"margin: 20px;\" :comment=\"reply\"/>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { formatDate } from '@/utils'\nexport default {\n  name: 'comment-item',\n  props: {\n    comment: Object,\n    top: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      isEditting: false,\n      isReplying: false,\n      edit: this.comment.text,\n      reply: '',\n      openCommentList: false\n    }\n  },\n  computed: {\n    isAuthor () {\n      return this.comment.author === this.username\n    },\n    ...mapState({\n      username: state => state.auth.username,\n      pending: state => state.comments.pending\n    })\n  },\n  methods: {\n    formatDate,\n    async sendEditAndClose () {\n      await this.sendEdit({ url: this.comment.url, text: this.edit, id: this.comment.id })\n      this.isEditting = false\n    },\n    _sendReply (data) {\n      this.sendReply(data)\n      // TODO: só remover o texto e fechar caixa se não der erro\n      this.isReplying = false\n      this.reply = ''\n    },\n    toggleListComment () {\n      this.openCommentList = !this.openCommentList\n    },\n    closeListComment () {\n      this.openCommentList = false\n    },\n    ...mapActions([\n      'requireLogin',\n      'sendDelete',\n      'sendVote',\n      'sendEdit',\n      'sendReport',\n      'sendReply'\n    ])\n  }\n}\n</script>\n"],"mappings":";;;AA4KA,SAAAA,QAAA,EAAAC,UAAA;AACA,SAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,OAAA,EAAAC,MAAA;IACAC,GAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA;MACAC,UAAA;MACAC,IAAA,OAAAT,OAAA,CAAAU,IAAA;MACAC,KAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA,EAAAC,aAAA;IACAC,QAAA,WAAAA,SAAA;MACA,YAAAf,OAAA,CAAAgB,MAAA,UAAAC,QAAA;IACA;EAAA,GACAtB,QAAA;IACAsB,QAAA,WAAAA,SAAAC,KAAA;MAAA,OAAAA,KAAA,CAAAC,IAAA,CAAAF,QAAA;IAAA;IACAG,OAAA,WAAAA,QAAAF,KAAA;MAAA,OAAAA,KAAA,CAAAG,QAAA,CAAAD,OAAA;IAAA;EACA,GACA;EACAE,OAAA,EAAAR,aAAA;IACAjB,UAAA,EAAAA,UAAA;IACA0B,gBAAA,WAAAA,iBAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAT,KAAA,CAAAU,QAAA;gBAAAC,GAAA,EAAAX,KAAA,CAAAxB,OAAA,CAAAmC,GAAA;gBAAAzB,IAAA,EAAAc,KAAA,CAAAf,IAAA;gBAAA2B,EAAA,EAAAZ,KAAA,CAAAxB,OAAA,CAAAoC;cAAA;YAAA;cACAZ,KAAA,CAAAjB,UAAA;YAAA;YAAA;cAAA,OAAAwB,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA;IACA;IACAU,UAAA,WAAAA,WAAAhC,IAAA;MACA,KAAAiC,SAAA,CAAAjC,IAAA;MACA;MACA,KAAAE,UAAA;MACA,KAAAG,KAAA;IACA;IACA6B,iBAAA,WAAAA,kBAAA;MACA,KAAA5B,eAAA,SAAAA,eAAA;IACA;IACA6B,gBAAA,WAAAA,iBAAA;MACA,KAAA7B,eAAA;IACA;EAAA,GACAhB,UAAA,EACA,gBACA,cACA,YACA,YACA,cACA,YACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}