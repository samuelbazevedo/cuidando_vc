{"ast":null,"code":"import _regeneratorRuntime from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport Vue from 'vue';\nimport decodeToken from 'jwt-decode';\nimport Vapi from 'vuex-rest-api';\nimport { baseUrls } from '@/configs';\nimport { http, addToStore } from '@/utils';\nvar baseURL = baseUrls.auth;\nfunction realExp(validPeriod) {\n  var now = new Date();\n  // Convert valid period from minutes to miliseconds, add it to now and\n  // return for future checks, to see if it's still valid. We use this value\n  // for checks instead of the exp field in the tokens because server and\n  // clients may differ time settings.\n  return now.getTime() + validPeriod * 60000;\n}\nfunction saveMicroToken(data) {\n  localStorage.microToken = data.microToken;\n  localStorage.microTokenValidTime = realExp(data.microTokenValidPeriod);\n}\nfunction saveTokens(state, json) {\n  // if (json && json.mainToken) {\n  localStorage.mainToken = json.mainToken;\n  localStorage.mainTokenValidTime = realExp(json.mainTokenValidPeriod);\n  state.username = decodeUsername(localStorage.mainToken);\n  saveMicroToken(json);\n  // } else {\n  //   dispatch('addError', 'error_token_json')\n  // }\n}\nfunction handleError(state, error) {\n  state.errorData = JSON.parse(error.response.data.message);\n}\nfunction validMainToken() {\n  var now = new Date();\n  // Check if main token is still valid for 30s\n  return localStorage.mainToken && now < localStorage.mainTokenValidTime - 30000;\n}\nfunction decodeUsername(token) {\n  return decodeToken(localStorage.mainToken).username;\n}\nexport default addToStore(new Vapi({\n  axios: http,\n  baseURL: baseURL,\n  state: {\n    username: null,\n    userInfo: null,\n    errorData: null,\n    pending: {}\n  }\n}).get({\n  action: 'getUserInfo',\n  property: 'userInfo',\n  path: function path(_ref) {\n    var username = _ref.username;\n    return \"/users/\".concat(username);\n  },\n  onSuccess: function onSuccess(state, payload, axios, _ref2) {\n    var params = _ref2.params;\n    state.userInfo = payload.data;\n  }\n}).post({\n  action: 'loginUser',\n  property: 'username',\n  path: '/login/local',\n  onSuccess: function onSuccess(state, payload, axios, _ref3) {\n    var params = _ref3.params;\n    saveTokens(state, payload.data);\n    // TODO limpar cache dos dados desse usuário para poder pegar dados completos\n  },\n  onError: handleError\n}).post({\n  action: 'registerUser',\n  path: '/users',\n  onSuccess: function onSuccess(state, payload) {\n    saveTokens(state, payload.data);\n  },\n  onError: handleError\n}).post({\n  action: 'forgotPassword',\n  property: 'expResetCode',\n  path: '/reset_password',\n  onError: handleError,\n  onSuccess: function () {\n    var _onSuccess = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(state, payload) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            state.expResetCode = payload.data.exp;\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function onSuccess(_x, _x2) {\n      return _onSuccess.apply(this, arguments);\n    }\n    return onSuccess;\n  }()\n}).put({\n  action: 'resetPassword',\n  property: 'username',\n  path: '/reset_password',\n  onError: handleError,\n  onSuccess: function () {\n    var _onSuccess2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(state, payload) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            saveTokens(state, payload.data);\n            // TODO limpar cache dos dados desse usuário para poder pegar dados completos\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    function onSuccess(_x3, _x4) {\n      return _onSuccess2.apply(this, arguments);\n    }\n    return onSuccess;\n  }()\n}).getStore(), {\n  mutations: {\n    setUsername: function setUsername(state, username) {\n      state.username = username;\n    },\n    clearUserData: function clearUserData(state) {\n      localStorage.removeItem('mainToken');\n      localStorage.removeItem('microToken');\n      state.username = null;\n    },\n    setAuthError: function setAuthError(state, error) {\n      state.errorData = error;\n    },\n    setPendingAuth: function setPendingAuth(state, _ref4) {\n      var type = _ref4.type;\n      Vue.set(state.pending, type, true);\n    },\n    unsetPendingAuth: function unsetPendingAuth(state, _ref5) {\n      var type = _ref5.type;\n      Vue.set(state.pending, type, false);\n    }\n  },\n  actions: {\n    loadPrevAuthData: function loadPrevAuthData(_ref6) {\n      var commit = _ref6.commit;\n      if (validMainToken()) {\n        commit('setUsername', decodeUsername(localStorage.mainToken));\n      }\n      // TODO se não for valido talvez devesse deletar?\n    },\n    getMicroToken: function getMicroToken(_ref7) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var dispatch, now, url, data, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch = _ref7.dispatch;\n              now = new Date(); // Check if micro token is still valid for 30s\n              if (!(now < localStorage.microTokenValidTime - 30000)) {\n                _context3.next = 5;\n                break;\n              }\n              _context3.next = 22;\n              break;\n            case 5:\n              url = \"\".concat(baseURL, \"/renew_micro_token\");\n              data = {\n                token: localStorage.mainToken\n              }; // console.log('auth:getMicroToken: renewing token with:', data)\n              _context3.prev = 7;\n              _context3.next = 10;\n              return http.post(url, data);\n            case 10:\n              response = _context3.sent;\n              if (!response.data) {\n                _context3.next = 15;\n                break;\n              }\n              saveMicroToken(response.data);\n              _context3.next = 16;\n              break;\n            case 15:\n              return _context3.abrupt(\"return\", null);\n            case 16:\n              _context3.next = 22;\n              break;\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](7);\n              dispatch('clearUserData');\n              dispatch('addError', 'error_renew_token');\n            case 22:\n              return _context3.abrupt(\"return\", localStorage.microToken);\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[7, 18]]);\n      }))();\n    },\n    logout: function logout(_ref8) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var dispatch, data;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch = _ref8.dispatch;\n              data = {\n                token: localStorage.mainToken\n              };\n              dispatch('clearUserData');\n              _context4.prev = 3;\n              _context4.next = 6;\n              return http.post(\"\".concat(baseURL, \"/logout\"), data);\n            case 6:\n              _context4.next = 11;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](3);\n              dispatch('addError', 'error_logout_server');\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[3, 8]]);\n      }))();\n    },\n    clearUserData: function clearUserData(_ref9) {\n      var commit = _ref9.commit;\n      // TODO limpar cache para não deixar dados sigilosos\n      // if (state.username) userinfo.forgetUser(this._currUsername)\n      commit('clearUserData');\n    },\n    requireLogin: function requireLogin(_ref10) {\n      var state = _ref10.state,\n        commit = _ref10.commit;\n      if (!state.username) {\n        commit('openModal', 'login');\n      }\n    },\n    getMyUserInfo: function getMyUserInfo(_ref11, data) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var state, dispatch, commit, url, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              state = _ref11.state, dispatch = _ref11.dispatch, commit = _ref11.commit;\n              url = \"\".concat(baseURL, \"/users/\").concat(state.username);\n              if (!data) data = {};\n              _context5.next = 5;\n              return dispatch('getMicroToken');\n            case 5:\n              data.token = _context5.sent;\n              _context5.prev = 6;\n              _context5.next = 9;\n              return http.put(url, data);\n            case 9:\n              response = _context5.sent;\n              state.userInfo = response.data;\n              _context5.next = 15;\n              break;\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](6);\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[6, 13]]);\n      }))();\n    },\n    sendEditMyUserInfo: function sendEditMyUserInfo(_ref12, data) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var dispatch, commit;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              dispatch = _ref12.dispatch, commit = _ref12.commit;\n              commit('setPendingAuth', {\n                type: 'sendEdit'\n              });\n              _context6.next = 4;\n              return dispatch('getMyUserInfo', data);\n            case 4:\n              commit('unsetPendingAuth', {\n                type: 'sendEdit'\n              });\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    }\n  }\n});","map":{"version":3,"names":["Vue","decodeToken","Vapi","baseUrls","http","addToStore","baseURL","auth","realExp","validPeriod","now","Date","getTime","saveMicroToken","data","localStorage","microToken","microTokenValidTime","microTokenValidPeriod","saveTokens","state","json","mainToken","mainTokenValidTime","mainTokenValidPeriod","username","decodeUsername","handleError","error","errorData","JSON","parse","response","message","validMainToken","token","axios","userInfo","pending","get","action","property","path","_ref","concat","onSuccess","payload","_ref2","params","post","_ref3","onError","_onSuccess","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","expResetCode","exp","stop","_x","_x2","apply","arguments","put","_onSuccess2","_callee2","_callee2$","_context2","_x3","_x4","getStore","mutations","setUsername","clearUserData","removeItem","setAuthError","setPendingAuth","_ref4","type","set","unsetPendingAuth","_ref5","actions","loadPrevAuthData","_ref6","commit","getMicroToken","_ref7","_callee3","dispatch","url","_callee3$","_context3","sent","abrupt","t0","logout","_ref8","_callee4","_callee4$","_context4","_ref9","requireLogin","_ref10","getMyUserInfo","_ref11","_callee5","_callee5$","_context5","sendEditMyUserInfo","_ref12","_callee6","_callee6$","_context6"],"sources":["/home/bd2-system/Desktop/esi/website-vuejs/src/stores/auth.js"],"sourcesContent":["import Vue from 'vue'\nimport decodeToken from 'jwt-decode'\nimport Vapi from 'vuex-rest-api'\nimport { baseUrls } from '@/configs'\nimport { http, addToStore } from '@/utils'\n\nconst baseURL = baseUrls.auth\n\nfunction realExp (validPeriod) {\n  let now = new Date()\n  // Convert valid period from minutes to miliseconds, add it to now and\n  // return for future checks, to see if it's still valid. We use this value\n  // for checks instead of the exp field in the tokens because server and\n  // clients may differ time settings.\n  return now.getTime() + validPeriod * 60000\n}\n\nfunction saveMicroToken (data) {\n  localStorage.microToken = data.microToken\n  localStorage.microTokenValidTime = realExp(data.microTokenValidPeriod)\n}\n\nfunction saveTokens (state, json) {\n  // if (json && json.mainToken) {\n  localStorage.mainToken = json.mainToken\n  localStorage.mainTokenValidTime = realExp(json.mainTokenValidPeriod)\n  state.username = decodeUsername(localStorage.mainToken)\n  saveMicroToken(json)\n  // } else {\n  //   dispatch('addError', 'error_token_json')\n  // }\n}\n\nfunction handleError (state, error) {\n  state.errorData = JSON.parse(error.response.data.message)\n}\n\nfunction validMainToken () {\n  let now = new Date()\n  // Check if main token is still valid for 30s\n  return localStorage.mainToken && (now < localStorage.mainTokenValidTime - 30000)\n}\n\nfunction decodeUsername (token) {\n  return decodeToken(localStorage.mainToken).username\n}\n\nexport default addToStore(new Vapi({\n  axios: http,\n  baseURL,\n  state: {\n    username: null,\n    userInfo: null,\n    errorData: null,\n    pending: {}\n  }\n}).get({\n  action: 'getUserInfo',\n  property: 'userInfo',\n  path: ({ username }) => `/users/${username}`,\n  onSuccess: (state, payload, axios, { params }) => {\n    state.userInfo = payload.data\n  }\n}).post({\n  action: 'loginUser',\n  property: 'username',\n  path: '/login/local',\n  onSuccess: (state, payload, axios, { params }) => {\n    saveTokens(state, payload.data)\n    // TODO limpar cache dos dados desse usuário para poder pegar dados completos\n  },\n  onError: handleError\n}).post({\n  action: 'registerUser',\n  path: '/users',\n  onSuccess: (state, payload) => {\n    saveTokens(state, payload.data)\n  },\n  onError: handleError\n}).post({\n  action: 'forgotPassword',\n  property: 'expResetCode',\n  path: '/reset_password',\n  onError: handleError,\n  onSuccess: async (state, payload) => {\n    state.expResetCode = payload.data.exp\n  }\n}).put({\n  action: 'resetPassword',\n  property: 'username',\n  path: '/reset_password',\n  onError: handleError,\n  onSuccess: async (state, payload) => {\n    saveTokens(state, payload.data)\n    // TODO limpar cache dos dados desse usuário para poder pegar dados completos\n  }\n}).getStore(),\n{\n  mutations: {\n    setUsername (state, username) {\n      state.username = username\n    },\n    clearUserData (state) {\n      localStorage.removeItem('mainToken')\n      localStorage.removeItem('microToken')\n      state.username = null\n    },\n    setAuthError (state, error) {\n      state.errorData = error\n    },\n    setPendingAuth (state, { type }) {\n      Vue.set(state.pending, type, true)\n    },\n    unsetPendingAuth (state, { type }) {\n      Vue.set(state.pending, type, false)\n    }\n  },\n  actions: {\n    loadPrevAuthData ({ commit }) {\n      if (validMainToken()) {\n        commit('setUsername', decodeUsername(localStorage.mainToken))\n      }\n      // TODO se não for valido talvez devesse deletar?\n    },\n    async getMicroToken ({ dispatch }) {\n      var now = new Date()\n\n      // Check if micro token is still valid for 30s\n      if (now < localStorage.microTokenValidTime - 30000) {\n        // console.log('auth:getMicroToken: no need to renew token')\n      } else {\n        let url = `${baseURL}/renew_micro_token`\n        let data = {\n          token: localStorage.mainToken\n        }\n        // console.log('auth:getMicroToken: renewing token with:', data)\n        try {\n          let response = await http.post(url, data)\n          if (response.data) saveMicroToken(response.data)\n          else return null\n        } catch (err) {\n          dispatch('clearUserData')\n          dispatch('addError', 'error_renew_token')\n        }\n      }\n      return localStorage.microToken\n    },\n    async logout ({ dispatch }) {\n      let data = { token: localStorage.mainToken }\n      dispatch('clearUserData')\n      try {\n        await http.post(`${baseURL}/logout`, data)\n      } catch (err) {\n        dispatch('addError', 'error_logout_server')\n      }\n    },\n    clearUserData ({ commit }) {\n      // TODO limpar cache para não deixar dados sigilosos\n      // if (state.username) userinfo.forgetUser(this._currUsername)\n      commit('clearUserData')\n    },\n    requireLogin ({ state, commit }) {\n      if (!state.username) {\n        commit('openModal', 'login')\n      }\n    },\n    async getMyUserInfo ({ state, dispatch, commit }, data) {\n      let url = `${baseURL}/users/${state.username}`\n      if (!data) data = {}\n      data.token = await dispatch('getMicroToken')\n      // TODO adaptar parte comentada\n      // commit('setPending', { type: 'delete', id })\n      try {\n        let response = await http.put(url, data)\n        state.userInfo = response.data\n      } catch (err) {\n        // dispatch('clearUserData')\n        // dispatch('addError', 'error_renew_token')\n      }\n      // commit('unsetPending', { type: 'delete', id })\n    },\n    async sendEditMyUserInfo ({ dispatch, commit }, data) {\n      commit('setPendingAuth', { type: 'sendEdit' })\n      await dispatch('getMyUserInfo', data)\n      commit('unsetPendingAuth', { type: 'sendEdit' })\n    }\n  }\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}