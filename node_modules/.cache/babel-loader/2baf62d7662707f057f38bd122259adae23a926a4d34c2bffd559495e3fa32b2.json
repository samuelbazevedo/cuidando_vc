{"ast":null,"code":"import _regeneratorRuntime from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/bd2-system/Desktop/esi/website-vuejs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { mapState, mapActions } from \"vuex\";\nimport L from \"leaflet\";\nimport axios from \"axios\";\nimport { LMap, LTileLayer, LMarker, LGeoJson } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from \"vue2-leaflet-markercluster\";\nimport YearSelect from \"@/components/YearSelect.vue\";\nimport { assets } from \"@/assets\";\nvar greenIcon = L.icon({\n  iconUrl: assets.empenhado,\n  iconSize: [25, 41],\n  popupAnchor: [0, -10]\n});\nvar blueIcon = L.icon({\n  iconUrl: assets.liquidado,\n  iconSize: [25, 41],\n  popupAnchor: [0, -10]\n});\nvar redIcon = L.icon({\n  iconUrl: assets.planejado,\n  iconSize: [25, 41],\n  popupAnchor: [0, -10]\n});\nvar icons = {\n  orcado: redIcon,\n  atualizado: redIcon,\n  empenhado: greenIcon,\n  liquidado: blueIcon\n};\nexport default {\n  name: \"map-despesas\",\n  components: {\n    LMap: LMap,\n    LTileLayer: LTileLayer,\n    LGeoJson: LGeoJson,\n    LMarker: LMarker,\n    \"v-marker-cluster\": Vue2LeafletMarkerCluster,\n    YearSelect: YearSelect\n  },\n  data: function data() {\n    var self = this;\n    return {\n      center: L.latLng(-23.58098, -46.61293),\n      zoom: 12,\n      searchAddress: \"\",\n      categories: [\"planejado\", \"empenhado\", \"liquidado\"],\n      url: \"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      markerClusterOptions: {\n        maxClusterRadius: 100,\n        spiderfyOnMaxZoom: true,\n        showCoverageOnHover: false,\n        zoomToBoundsOnClick: true\n      },\n      geoJsonOptions: {\n        pointToLayer: function pointToLayer(feature, latlng) {\n          return L.marker(latlng, {\n            icon: icons[feature.properties.state]\n          });\n        },\n        onEachFeature: function onEachFeature(feature, layer) {\n          layer.on(\"click\", self.pointClicked);\n        }\n      }\n    };\n  },\n  computed: _objectSpread({\n    // if the map should display expanded or not\n    expanded: function expanded() {\n      return this.routeName === \"home\";\n    },\n    geoJsons: function geoJsons() {\n      return [this.yearPoints];\n    }\n  }, mapState({\n    routeName: function routeName(state) {\n      return state.route.name;\n    },\n    yearPoints: function yearPoints(state) {\n      return state.money.yearPoints;\n    },\n    pointInfo: function pointInfo(state) {\n      return state.money.pointInfo;\n    },\n    pending: function pending(state) {\n      return state.money.pending.yearPoints;\n    }\n  })),\n  methods: _objectSpread({\n    pointClicked: function pointClicked(event) {\n      var code = event.target.feature.properties.uid;\n      this.$refs.map.mapObject.panTo(event.latlng);\n      this.$router.push({\n        name: \"despesa\",\n        params: {\n          code: code\n        }\n      });\n    },\n    zoomToPointInfo: function zoomToPointInfo(pointInfo) {\n      if (pointInfo && pointInfo.geometry) {\n        var c = pointInfo.geometry.coordinates;\n        var l = L.latLng([c[1], c[0]]);\n        this.$refs.map.mapObject.flyTo(l, 18);\n      }\n    },\n    locateAddress: function locateAddress() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var base, query, url, json;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              base = \"https://nominatim.openstreetmap.org/search/\";\n              query = \"?format=json&limit=1&countrycodes=br&viewbox=-47.16,-23.36,-45.97,-23.98&bounded=1\";\n              url = base + _this.searchAddress + query;\n              _context.next = 5;\n              return axios.get(url);\n            case 5:\n              json = _context.sent.data;\n              if (json) {\n                if (json.length) _this.$refs.map.mapObject.setView([json[0].lat, json[0].lon], 16);else _this.addError(\"address_not_found\");\n              }\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }, mapActions([\"addError\"])),\n  watch: {\n    pointInfo: function pointInfo(newValue) {\n      this.zoomToPointInfo(newValue);\n    },\n    routeName: function routeName(newValue) {\n      if (newValue === \"home\") this.$refs.map.mapObject.flyTo(this.center, this.zoom);else if (newValue === \"despesa\") this.zoomToPointInfo(this.pointInfo);\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","L","axios","LMap","LTileLayer","LMarker","LGeoJson","Vue2LeafletMarkerCluster","YearSelect","assets","greenIcon","icon","iconUrl","empenhado","iconSize","popupAnchor","blueIcon","liquidado","redIcon","planejado","icons","orcado","atualizado","name","components","data","self","center","latLng","zoom","searchAddress","categories","url","attribution","markerClusterOptions","maxClusterRadius","spiderfyOnMaxZoom","showCoverageOnHover","zoomToBoundsOnClick","geoJsonOptions","pointToLayer","feature","latlng","marker","properties","state","onEachFeature","layer","on","pointClicked","computed","_objectSpread","expanded","routeName","geoJsons","yearPoints","route","money","pointInfo","pending","methods","event","code","target","uid","$refs","map","mapObject","panTo","$router","push","params","zoomToPointInfo","geometry","c","coordinates","l","flyTo","locateAddress","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","base","query","json","wrap","_callee$","_context","prev","next","get","sent","length","setView","lat","lon","addError","stop","watch","newValue"],"sources":["src/components/MapDespesas.vue"],"sourcesContent":["<template>\n  <div class=\"c-map\" :class=\"{'expanded-map': expanded }\">\n    <div\n      v-if=\"pointInfo.code && !pointInfo.geometry && !expanded\"\n      class=\"not-mapped-msg-container\"\n    >\n      <div class=\"not-mapped-msg\">\n        {{ $t(\"Not mapped\") }}\n      </div>\n    </div>\n\n    <transition name=\"fade\">\n      <div v-if=\"pending\" class=\"spinner-overlay\">\n        <spinner-anim scale=\"1\" />\n      </div>\n    </transition>\n\n    <div class=\"map__card-content container mx-auto\">\n      <div v-if=\"expanded\" class=\"my-auto mx-auto h-full lg:flex flex-col justify-center max-w-md lg:absolute\">\n        <div class=\"bg-white lg:pb-10 lg:p-10 pt-10 pb-3 mb-5 lg:rounded-lg lg:shadow-lg\">\n          <div class=\"c-map__title mb-5\">\n          <h1 class=\"text-neutral-base lg:text-3xl lg:text-left text-center text-xl font-bold\">Acompanhe os gastos públicos da cidade de São Paulo em tempo real</h1>\n          <p class=\"text-neutral-light lg:text-base lg:text-left text-center text-sm mt-2\">O projeto Cuidando do Meu Bairro propõe tornar mais inteligível a visualização dos dados das despesas públicas a partir da geolocalização dos gastos</p>\n        </div>\n        <div class=\"\">\n          <div class=\"c-map__search-address lg:mb-5 mb-3\">\n              <input\n                id=\"search-address-input\"\n                class=\"c-map__search-address-input form-control\n                block\n                w-full\n                lg:p-4\n                text-base\n                font-normal\n                text-neutral-base\n                placeholder:text-neutral-base\n                bg-white bg-clip-padding\n                border border-solid border-neutral-light\n                rounded\n                transition\n                ease-in-out\n                m-0\n                focus:text-gray-700 focus:bg-white focus:border-primary-base focus:outline-none\"\n                type=\"text\"\n                v-model=\"searchAddress\"\n                @keypress.enter=\"locateAddress\"\n                :placeholder=\"$t('Search for an address')\"\n                focused\n              />\n          </div>\n          <div class=\"c-map__year-submit grid grid-cols-2 gap-4 h-8\">\n            <div>\n              <year-select class=\"w-44\" />\n            </div>\n            <div>\n              <button class=\"btn w-full h-full border-2 hover:bg-primary-dark font-medium text-xs leading-tight uppercase rounded border-primary-base hover:border-primary-dark bg-primary-base text-white focus:outline-none focus:ring-0 transition duration-150 ease-in-out\" type=\"button\" @click=\"locateAddress\">Buscar</button>\n            </div>\n          </div>\n        </div>\n        </div>\n        \n        <div class=\"c-map__legend flex rounded-lg lg:shadow-lg justify-center items-center bg-white p-1\">\n            <span class=\"text-neutral-base text-sm font-bold\">{{ $t(\"Map legend\") }}:</span>\n            <div\n              v-for=\"category in categories\"\n              :key=\"category\"\n              class=\"capitalize map-category p-2\"\n            >\n              <img :src=\"$assets[category]\" class=\"w-5 mx-auto\" />\n              <span class=\"text-neutral-light text-xs\">{{ $t(category) }}</span>\n            </div>\n        </div>\n      </div> \n    </div> \n \n    <div id=\"map-parent-container\" :class=\"{ 'expanded-map': expanded }\">\n      <l-map ref=\"map\" id=\"map-container\" :zoom=\"zoom\" :center=\"center\">\n        <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n        <v-marker-cluster :options=\"markerClusterOptions\">\n          <l-geo-json\n            v-if=\"geoJson.features\"\n            :key=\"geoJson.features[0].properties.uid\"\n            v-for=\"geoJson in geoJsons\"\n            :geojson=\"geoJson\"\n            :options=\"geoJsonOptions\"\n          />\n        </v-marker-cluster>\n      </l-map>\n\n      <div class=\"map-attribution\">\n        <a target=\"_blank\" class=\"mx-5\" href=\"https://www.openstreetmap.org/copyright/pt-BR\">\n          © Contribuidores do OpenStreetMap\n        </a>\n      </div>\n      <div v-if=\"expanded\" class=\"map-update-time mx-5\">\n        {{ $t(\"source\") }}:\n        <a\n          target=\"_blank\"\n          href=\"https://orcamento.sf.prefeitura.sp.gov.br/orcamento/execucao.php\"\n          >Secretaria de Finanças</a\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from \"vuex\";\nimport L from \"leaflet\";\nimport axios from \"axios\";\nimport { LMap, LTileLayer, LMarker, LGeoJson } from \"vue2-leaflet\";\nimport Vue2LeafletMarkerCluster from \"vue2-leaflet-markercluster\";\nimport YearSelect from \"@/components/YearSelect.vue\";\nimport { assets } from \"@/assets\";\n\nvar greenIcon = L.icon({\n  iconUrl: assets.empenhado,\n  iconSize: [25, 41],\n  popupAnchor: [0, -10],\n});\nvar blueIcon = L.icon({\n  iconUrl: assets.liquidado,\n  iconSize: [25, 41],\n  popupAnchor: [0, -10],\n});\nvar redIcon = L.icon({\n  iconUrl: assets.planejado,\n  iconSize: [25, 41],\n  popupAnchor: [0, -10],\n});\nvar icons = {\n  orcado: redIcon,\n  atualizado: redIcon,\n  empenhado: greenIcon,\n  liquidado: blueIcon,\n};\n\nexport default {\n  name: \"map-despesas\",\n  components: {\n    LMap,\n    LTileLayer,\n    LGeoJson,\n    LMarker,\n    \"v-marker-cluster\": Vue2LeafletMarkerCluster,\n    YearSelect,\n  },\n  data() {\n    var self = this;\n    return {\n      center: L.latLng(-23.58098, -46.61293),\n      zoom: 12,\n      searchAddress: \"\",\n      categories: [\"planejado\", \"empenhado\", \"liquidado\"],\n      url: \"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution:\n        '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      markerClusterOptions: {\n        maxClusterRadius: 100,\n        spiderfyOnMaxZoom: true,\n        showCoverageOnHover: false,\n        zoomToBoundsOnClick: true,\n      },\n      geoJsonOptions: {\n        pointToLayer(feature, latlng) {\n          return L.marker(latlng, { icon: icons[feature.properties.state] });\n        },\n        onEachFeature(feature, layer) {\n          layer.on(\"click\", self.pointClicked);\n        },\n      },\n    };\n  },\n  computed: {\n    // if the map should display expanded or not\n    expanded() {\n      return this.routeName === \"home\";\n    },\n    geoJsons() {\n      return [this.yearPoints];\n    },\n    ...mapState({\n      routeName: (state) => state.route.name,\n      yearPoints: (state) => state.money.yearPoints,\n      pointInfo: (state) => state.money.pointInfo,\n      pending: (state) => state.money.pending.yearPoints,\n    }),\n  },\n  methods: {\n    pointClicked(event) {\n      let code = event.target.feature.properties.uid;\n      this.$refs.map.mapObject.panTo(event.latlng);\n      this.$router.push({ name: \"despesa\", params: { code } });\n    },\n    zoomToPointInfo(pointInfo) {\n      if (pointInfo && pointInfo.geometry) {\n        let c = pointInfo.geometry.coordinates;\n        let l = L.latLng([c[1], c[0]]);\n        this.$refs.map.mapObject.flyTo(l, 18);\n      }\n    },\n    async locateAddress() {\n      let base = \"https://nominatim.openstreetmap.org/search/\";\n      let query =\n        \"?format=json&limit=1&countrycodes=br&viewbox=-47.16,-23.36,-45.97,-23.98&bounded=1\";\n      let url = base + this.searchAddress + query;\n      let json = (await axios.get(url)).data;\n      if (json) {\n        if (json.length)\n          this.$refs.map.mapObject.setView([json[0].lat, json[0].lon], 16);\n        else this.addError(\"address_not_found\");\n      }\n    },\n    ...mapActions([\"addError\"]),\n  },\n  watch: {\n    pointInfo(newValue) {\n      this.zoomToPointInfo(newValue);\n    },\n    routeName(newValue) {\n      if (newValue === \"home\")\n        this.$refs.map.mapObject.flyTo(this.center, this.zoom);\n      else if (newValue === \"despesa\") this.zoomToPointInfo(this.pointInfo);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n  .c-map {\n    min-width: 100%;\n    transition: all 0.5s ease-out;\n    height: 40vh;\n    display: inline-block;\n    position: relative;\n    z-index: 0;\n    &.expanded-map {\n      height: 75vh;\n    }\n  }\n  .map-update-time {\n    background-color: rgba(0,0,0,.5);\n    border-radius: 5px 5px 0 0;\n    bottom: 0;\n    color: #fff;\n    font-size: 9pt;\n    padding: 2px 10px;\n    position: absolute;\n    z-index: 1100;\n  }\n  #map-container {\n    z-index: 0;\n    height: 100%;\n  }\n  .expanded-map > #map-container {\n    height: 100%;\n  }\n  #map-parent-container{\n    height: 40vh;\n    width: 100%;\n    position: relative;\n    z-index: -100;\n    &.expanded-map {\n      width: 100%;\n      margin: 0px;\n      height: 75vh;\n      position: relative;\n    }\n  }\n  .search-address {\n    z-index: 100;\n    @media (min-width: screen-xs) {\n      right: 30px;\n      width: 370px;\n      top: 20px;\n      position: absolute;\n      border-radius: 4px;\n    }\n    @media (min-width: screen-sm) {\n      right: 130px;\n    }\n    input {\n      width: 400px;\n      border: 0px none;\n      height: 40px;\n      padding-left: 10px;\n    }\n    .btn {\n      height: 40px;\n    }\n    img {\n      height: 20px;\n    }\n  }\n  .marker-cluster { \n    color: white;\n    background-color: none;\n    text-align: center;\n    font-size: 12pt;\n    line-height: 40px;\n    font-weight: bold;\n    background-image: url('../assets/icons/mapa/cluster.svg');\n    background-size: 100%;\n  }\n  .leaflet-control-attribution {\n    display: none;\n  }\n  .map-attribution {\n    position: absolute;\n    bottom: 0px;\n    right: 2px;\n    font-size: 7pt;\n  }\n  .map-legend-container {\n    // @extend .flex\n    width: 100%;\n    position: absolute;\n    bottom: 10px;\n    justify-content: center;\n    pointer-events: none;\n\n    .map-legend {\n      font-size: 10pt;\n      position: relative;\n      background-color: rgba(255, 255, 255, 0.9);\n      padding: 10px 20px;\n      border-radius: 3px;\n      min-width: 160px;\n    }\n    .map-category {\n      margin-left: 15px;\n      display: inline-block;\n      img {\n        margin-right: 5px;\n        height: 25px;\n      }\n    }\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}